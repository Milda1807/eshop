generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ==============
// NOVÉ MODELY
// ==============

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  name      String?
  password  String    // V reálné aplikaci zde bude hash hesla, nikdy ne heslo v čisté podobě!
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  addresses Address[] // Uživatel může mít více adres
  orders    Order[]   // Uživatel může mít více objednávek
}

model Address {
  id         Int    @id @default(autoincrement())
  street     String
  city       String
  postalCode String
  country    String

  user   User @relation(fields: [userId], references: [id])
  userId Int  @map("user_id") // Každá adresa patří jednomu uživateli
}

model Order {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  status    OrderStatus @default(PENDING) // Použijeme Enum pro statusy
  total     Decimal   @db.Decimal(10, 2) // Celková cena objednávky

  user   User @relation(fields: [userId], references: [id])
  userId Int  @map("user_id")

  items OrderItem[]
}

model OrderItem {
  id        Int     @id @default(autoincrement())
  quantity  Int
  price     Decimal @db.Decimal(10, 2)

  order   Order @relation(fields: [orderId], references: [id])
  orderId Int   @map("order_id")

  product   Product @relation(fields: [productId], references: [id])
  productId Int     @map("product_id")
}

enum OrderStatus {
  PENDING
  PAID
  SHIPPED
  DELIVERED
  CANCELED
}


model Product {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  name        String   @unique
  description String
  shortDescription String?
  price       Decimal  @db.Decimal(10, 2)
  sku         String   @unique
  stock       Int      @default(0)
  published   Boolean  @default(false)
  imageUrl    String?

  category   Category? @relation(fields: [categoryId], references: [id])
  categoryId Int?      @map("category_id")

  orderItems OrderItem[]
}

model Category {
  id       Int       @id @default(autoincrement())
  name     String    @unique
  products Product[]
}